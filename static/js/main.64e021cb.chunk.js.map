{"version":3,"sources":["components/sidebar/sidebar.module.css","components/settings/settings.module.css","utils/validators/validators.ts","utils/form-control.tsx","components/login/login-from.component.tsx","api/api.ts","redux/login-reducer.ts","components/login/login-container.component.tsx","components/sidebar/sidebar.component.tsx","components/projests-creator/project-description-form.tsx","components/projests-creator/project-title-form.tsx","redux/project-—Åreator-reducer.ts","components/projests-creator/project-creator-container.component.tsx","components/project-general/delete-confirmation-window.tsx","components/project-general/edit-form.tsx","components/project-general/full-project-data.tsx","components/project-general/projects-list.tsx","redux/project-reducer.ts","components/project-general/project-general-container.component.tsx","components/settings/settings.component.tsx","components/main/main.component.tsx","redux/redux_store.ts","App.tsx","serviceWorker.js","index.js","components/projests-creator/project-creator.module.css","components/login/login.module.css","utils/form-control.module.css","components/main/main.module.css","components/project-general/project-general.module.css"],"names":["module","exports","minLength","FormControl","input","meta","props","child","hasError","touched","error","className","s","form_control","children","Input","restProps","Textarea","required","value","checkformat","replace","minLength8","length","LoginFormRedux","reduxForm","form","history","useHistory","currentToken","push","m","login__form","onSubmit","handleSubmit","login","Field","component","validate","name","placeholder","type","instance","axios","baseURL","UsersApi","password","get","then","response","data","title","description","token","post","id","put","delete","initialState","status","sendCode","errorCode","setUserToken","loginReducer","state","action","LoginContainer","connect","sendFormForAuthorization","dispatch","a","currentFont","JSON","parse","localStorage","getItem","setTimeout","message","Sidebar","sidebar","to","activeClassName","onClick","clear","ProjestsDescriptionRedux","p","cols","rows","textarea","ProjestsTitleRedux","checkTtitle","projectId","projectCreatorReducer","ProjectCreatorContainer","projectCreator","projectsList","projects","createUsersProject","console","log","useState","step","setStep","setTitle","setCheckTitle","setProjectsTitle","find","el","setProjectsDescription","trim","switchForms","DeleteConfirmationWindow","modal","modal__window","window__title","window__button","window__button_action","button","deleteProject","cancelDelete","EditFormRedux","enableReinitialize","cancelEdit","propTypes","PropTypes","object","func","ShowFullProjectData","popap","setPopap","project__info","removeUsersProject","_id","editFlag","project__title","setEditMode","setInitialValue","answer","project__description","editUserProject","titleEdit","descriptionEdit","initialValues","initialValue","ProjectsList","projects__container","getUsersProjectsList","setMode","setFlagMode","projectReducer","useStyles","makeStyles","theme","createStyles","root","width","heading","fontSize","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","color","palette","text","secondary","MuiButtonBaseroot","height","ProjectGeneralContainer","getUsersProjects","useEffect","classes","React","expanded","setExpanded","map","index","key","Accordion","onChange","panel","event","isExpanded","AccordionSummary","aria-controls","AccordionDetails","Settings","mode","settings","triggerSearch","Main","main","main__sidebar","main__general","path","render","Suspense","reducers","combineReducers","formReducer","persistedState","serializedState","e","loadFromLocalStorage","store","createStore","applyMiddleware","thunkMiddleware","subscribe","stringify","setItem","saveToLocalStorage","getState","window","App","basename","process","exact","class","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.64e021cb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__Y80ct\",\"active\":\"sidebar_active__2zaX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"settings_settings__132Wp\"};","export const required = (value: any) => {\r\n    if (value)  return undefined;\r\n    return 'Field is required';\r\n  \r\n  }\r\n  \r\n  export const requiredFieldMaxValue = (value: any) => {\r\n    if (value) {if (value.length > 20)  return `Max length is ${20} symbols`;\r\n      return undefined;\r\n      }\r\n    return 'Field is required';\r\n  }\r\n\r\n  export const checkformat = (value: any) => {\r\n    if (value) {if (value !== value.replace(/[^A-Za-z]/ig, ''))  return `must contain only English letters`;\r\n      return undefined;\r\n      }\r\n    return 'Field is required';\r\n  }\r\n  \r\n  \r\n  export const maxLengthCreator = (maxLength: any) => (value) => {\r\n    if (value.length > maxLength)  return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n  \r\n  }\r\n\r\n  export const minLengthCreator = (minLength: any) => (value) => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n  }","import React from 'react';\r\nimport s from './form-control.module.css';\r\nimport { Field, reduxForm} from 'redux-form';\r\n\r\nconst FormControl = ({input, meta, child,...props}) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n     <div className={s.form_control+\" \"+ (hasError? s.error: \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      <div>\r\n      { hasError && <span className={s.error}>{meta.error}</span>}\r\n      </div>\r\n     </div>\r\n   )\r\n}\r\n\r\n\r\nexport const Input = (props: any) => {\r\n   const {input, meta, child,...restProps} = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\nexport const Textarea = (props: any) => {\r\n   const {input, meta, child,...restProps} = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\nexport const File = (props: any) => {\r\n   const {input, meta, child,...restProps} = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (name, placeholder, component, type) =>\r\n {\r\n  return (\r\n     <Field name={name}\r\n  placeholder={placeholder}\r\n  component={component}\r\n  type={type} />\r\n)\r\n}","import React, {useState} from \"react\";\nimport { Field, reduxForm } from 'redux-form';\nimport {Input} from '../../utils/form-control';\nimport {File} from '../../utils/form-control';\nimport { Redirect } from \"react-router-dom\"; \nimport {required , maxLengthCreator, minLengthCreator, checkformat} from '../../utils/validators/validators';\nimport { useHistory } from \"react-router-dom\";\nimport m from './login.module.css';\nconst minLength8 = minLengthCreator(4);\n\nconst LoginForm = (props:any) => {\n\n    let history = useHistory();\n\n    if(props.currentToken) {\n         history.push(\"/main/projects\")\n    }\n    return (\n        <>\n         <form className={m.login__form}  onSubmit = {props.handleSubmit}>\n                 {!props.login? <h3>Log In</h3>:<h3 >Welcome {props.login}</h3> } \n                 {!props.login && <Field component={Input}  validate={[required ]}    name={'login'}  placeholder='Enter login' />}\n                                 <Field component={Input}  validate={[required, minLength8]} type='password'    name={'password'}  placeholder='Enter password' />\n             <button> Submit</button>\n          </form>   \n        </>\n    )\n}\n\nconst LoginFormRedux = reduxForm({\n    form:'login-form'\n  })(LoginForm)\n\nexport default LoginFormRedux;\n  \n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as axios from 'axios';\r\n\r\n/*let  bodyFormData = new FormData();\r\n    bodyFormData.append(\"file\", file);\r\n    bodyFormData.set(\"api_token\", 'e18f6001fd4236175f7dc468d0470702');\r\n    bodyFormData.set(\"return\", \"timecode,apple_music,deezer,spotify\");*/\r\nconst instance = axios.create({\r\n  baseURL: 'https://project23e.herokuapp.com/',\r\n});\r\n\r\nexport const UsersApi = {\r\n    login<T>(login: any, password: any): Promise<T> {\r\n        return instance.get(`/get-users?login=${login}&password=${password}`, {\r\n            login,\r\n            password\r\n        }).then(response  => { return response.data}, (error) => {  return error; })\r\n    },\r\n    createNewProject(title:string, description:string, token:string) {\r\n        return instance.post(`create-new-project/${token}`, {\r\n            title, description,token\r\n        }).then(response => {        \r\n            return response.data;\r\n        })\r\n    },\r\n    saveEditedProject(title: string, description: string, id: string, token: string) {\r\n        return instance.put(`user-ptoject/${id}`, {\r\n            title,\r\n            description,\r\n            token\r\n        }).then(response => {      \r\n            return response.data;\r\n        })\r\n    },\r\n    getProjectsList(token: string) {\r\n        return instance.get(`/user-ptojects?token=${token}`, {\r\n            token\r\n        }).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    deleteProject(id: string, token: string) {\r\n        return instance.delete(`/delete-project/?id=${id}&token=${token}`).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}\r\n","import {UsersApi} from '../api/api' \r\nimport { act } from 'react-dom/test-utils';\r\nconst SET_USER_DATA = 'SET-USER-DATA'; \r\nconst SET_ERROR_DATA = 'SET_ERROR_DATA';\r\n\r\n interface initialState {\r\n  token?: string | null,\r\n  status?:string | null,\r\n  sendCode?:string | null,\r\n  login?:string | null,\r\n  errorCode?: string | null\r\n }\r\nlet initialState: initialState = {\r\n   token: null,\r\n   status:null,\r\n   sendCode:null,\r\n   login:null,\r\n   errorCode: null\r\n  }\r\n\r\n  const loginReducer = ( state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA: \r\n      return {\r\n      ...state,  token: action.data.token,\r\n                 status: action.data.status,\r\n                 login: action.data.login,\r\n                 errorCode: action.data.sendCode\r\n      }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n\r\nconst setUserToken = (data: any) => {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    data\r\n    \r\n  }  \r\n}\r\n\r\n\r\nexport const sendFormForAuthorization = (login: string, password: string) => {\r\n  return  async (dispatch: any) => {\r\n     let data = await UsersApi.login(login, password);\r\n       dispatch(setUserToken(data))\r\n  }  \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default loginReducer;","\r\nimport React from 'react';\r\nimport {connect} from   'react-redux';\r\nimport LoginFormRedux from './login-from.component';\r\nimport {sendFormForAuthorization} from '../../redux/login-reducer'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport m from './login.module.css';\r\nimport PropTypes from 'prop-types'; \r\n\r\nconst Login = (props:any) => {\r\n  \r\n  let history = useHistory();\r\n  let currentToken;\r\n  let  currentFont = JSON.parse(localStorage.getItem('state'));\r\n  if (currentFont) {\r\n       currentToken = currentFont.login.token;\r\n  }\r\n\r\n  const onSubmitAuthorization = (value: any) => {        \r\n      if(!props.login) {\r\n          props.sendFormForAuthorization(value.login, value.password);\r\n      } \r\n      if(props.login) {\r\n          props.sendFormForAuthorization(props.login, value.password);\r\n          setTimeout(()=>history.push(\"/main/projects\"),150) \r\n      }\r\n  }\r\n\r\n  return (\r\n      <div className={m.form}>\r\n          <LoginFormRedux currentToken={currentToken} login={props.login} errorCode={props.errorCode} onSubmit={onSubmitAuthorization} />\r\n          {props.errorCode && <div className={m.message}>{props.errorCode}</div> }\r\n        </div>\r\n   \r\n\r\n  )\r\n}\r\n\r\nLogin.propTypes = {\r\n  token: PropTypes.string,\r\n  status: PropTypes.string,\r\n  login: PropTypes.string,\r\n  errorCode: PropTypes.string,\r\n  sendFormForAuthorization: PropTypes.func\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n  return {\r\n    token: state.login.token,\r\n    status: state.login.status,\r\n    login: state.login.login,\r\n    errorCode: state.login.errorCode\r\n  }\r\n\r\n}\r\n\r\nconst LoginContainer = connect(mapStateToProps, {sendFormForAuthorization} )(Login);\r\n\r\n\r\n\r\nexport default LoginContainer;","import React from \"react\";\nimport { NavLink, Route } from 'react-router-dom'\nimport s from './sidebar.module.css'\nconst Sidebar = () => {\n    const onEndSession = () => {\n        localStorage.clear();\n    }\n    return (\n        <nav>\n            <div className={s.sidebar}>\n                <NavLink to=\"/main/projects\" activeClassName=\"selected\">My projects </NavLink>\n                <NavLink to=\"/main/create-project\" activeClassName=\"selected\">Create project</NavLink> \n                <NavLink to=\"/login\" activeClassName=\"selected\"><div onClick={onEndSession}>Log Out</div></NavLink>\n                <NavLink to=\"/main/settings\" activeClassName=\"selected\">Settings</NavLink> \n            </div>\n            \n\n        </nav>\n    )\n}\n\nexport default Sidebar;\n","import React, {useState} from \"react\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Input, Textarea} from '../../utils/form-control';\r\nimport {File} from '../../utils/form-control';\r\nimport { Redirect} from \"react-router-dom\"; \r\nimport {required, checkformat} from '../../utils/validators/validators';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport p from './project-creator.module.css'\r\n\r\ninterface Form {\r\n    title?: string,\r\n    description?:string\r\n}\r\n\r\n\r\nconst ProjestsDescriptionForm = (props:any) => {\r\n    return (\r\n        <>\r\n         <form   className={p.form} onSubmit = {props.handleSubmit}>\r\n             <h1 >Enter description </h1>\r\n             <Field component={Textarea}  cols=\"40\" rows=\"10\"  className={p.textarea} validate={[required]}  name={'description'}/>\r\n             <button> Submit</button>\r\n          </form>   \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ProjestsDescriptionRedux = reduxForm({\r\n    form:'description'\r\n  })(ProjestsDescriptionForm)\r\n\r\nexport default ProjestsDescriptionRedux;","import React, {useState} from \"react\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Input, Textarea} from '../../utils/form-control';\r\nimport {File} from '../../utils/form-control';\r\nimport p from './project-creator.module.css'\r\nimport { Redirect} from \"react-router-dom\"; \r\nimport {required, checkformat} from '../../utils/validators/validators';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst ProjestsTitleForm = (props:any) => {\r\n    return (\r\n        <>\r\n         <form   className={p.form} onSubmit = {props.handleSubmit}>\r\n             <h3 >Enter title</h3>\r\n             <Field component={Input}     validate={[required, checkformat]}  name={'title'}  placeholder='String from soung' />\r\n             <button> Next </button>\r\n             {props.checkTtitle && <div className={p.error}>this title already exist </div>}\r\n          </form>   \r\n          {}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ProjestsTitleRedux = reduxForm({\r\n    form:'title'\r\n  })(ProjestsTitleForm)\r\n\r\n  export default ProjestsTitleRedux;","import {UsersApi} from '../api/api'\r\n\r\nconst SET_PROJECT_ID = 'SET-PROJECT-ID'; \r\nlet initialState = {\r\n    projectId: null,\r\n  }\r\n\r\n  const projectCreatorReducer = ( state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SET_PROJECT_ID: \r\n      return {\r\n        projectId: action.projectId,\r\n\r\n      }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n\r\nconst setProjectToken = (projectId) => {\r\n  return {\r\n    type: SET_PROJECT_ID,\r\n    projectId\r\n    \r\n  }\r\n  \r\n}\r\n\r\nexport const createUsersProject = (title, description, token) => {\r\n  return  async (dispatch) => {\r\n    console.log(title, description ,token)\r\n    let data = await UsersApi.createNewProject(title, description, token);\r\n     dispatch(setProjectToken(data.projectId))\r\n  }  \r\n\r\n  }\r\n\r\nexport default projectCreatorReducer;","import React, {useState} from 'react';\r\nimport {connect} from   'react-redux';\r\nimport ProjestsDescriptionRedux from './project-description-form';\r\nimport ProjestsTitleRedux from './project-title-form'\r\nimport {createUsersProject} from '../../redux/project-—Åreator-reducer'\r\nimport { Redirect} from \"react-router-dom\"; \r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types'; \r\n\r\nconst ProjectCreator = (props:any) => {\r\n  const [step, setStep] = useState(1);\r\n  const [title, setTitle] = useState(null);\r\n  const [checkTtitle, setCheckTitle] = useState(false);\r\n  let history = useHistory();\r\n\r\n  const setProjectsTitle = (value:Form) => {\r\n     setTitle(value.title);\r\n     let findTheSameTitleName = props.projectsList.find((el) => el.title === value.title);\r\n\r\n     if(!findTheSameTitleName) {\r\n      setStep(step +1)\r\n     } else {\r\n      setCheckTitle(true);\r\n     }\r\n\r\n  }\r\n  \r\n  const checkValueTitle = () => {\r\n      return (\r\n          <div>\r\n              no no no\r\n          </div>\r\n      )\r\n  }\r\n\r\n  const setProjectsDescription = (value:Form) => {\r\n      props.createUsersProject(title, value.description.trim(), props.token);\r\n      setStep(step+1)\r\n  }\r\n\r\n  const redirect = () => {\r\n      setTimeout(() =>history.push(\"/main/projects\") , 2000);       \r\n  }\r\n  \r\n  if(step ===3 ) {  \r\n      redirect()\r\n  }\r\n\r\n  if(!props.token) {\r\n      return <Redirect to={`/login`} />;\r\n  }\r\n \r\n\r\n  const switchForms = () => {  \r\n      switch(step) {\r\n          case 1: \r\n          return(\r\n              <ProjestsTitleRedux checkTtitle={checkTtitle} onSubmit={setProjectsTitle} /> \r\n          )\r\n          case 2: \r\n          return(\r\n              <ProjestsDescriptionRedux onSubmit={setProjectsDescription} />\r\n          )\r\n          default:\r\n              return <div>–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω</div>;     \r\n      } \r\n    }\r\n\r\n  return (\r\n      <>\r\n          {\r\n              switchForms()\r\n          }\r\n      </>\r\n\r\n  )\r\n}\r\n\r\nProjectCreator.propTypes = {\r\n    token: PropTypes.string,\r\n    projectId: PropTypes.string,\r\n    projectsList:PropTypes.array,\r\n    createUsersProject: PropTypes.func\r\n}\r\n\r\nlet mapStateToProps = (state: any) => {\r\n  return {\r\n    token: state.login.token,\r\n    projectId: state.projectCreator.projectId,\r\n    projectsList: state.projects.projectsList,\r\n  }\r\n\r\n}\r\n\r\n\r\nconst ProjectCreatorContainer = connect(mapStateToProps, {createUsersProject} )(ProjectCreator);\r\nexport default ProjectCreatorContainer;","import React from 'react'\r\nimport p from './project-general.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\ninterface Delete {\r\n    cancelDelete: () => void ,\r\n    deleteProject: () => void\r\n}\r\n\r\nconst DeleteConfirmationWindow: React.FunctionComponent<Delete>= (props) => {\r\n  const onDeleteProject = () => {\r\n    props.deleteProject()\r\n  }\r\n  const onCancel = () => {\r\n    props.cancelDelete()\r\n  }\r\n  return (\r\n    <div className={p.modal}>\r\n      <div className={p.modal__window}>\r\n        <div className={p.window__title}>\r\n          <h3>Do you really wanna delete the project</h3>\r\n        </div>\r\n        <div className={p.window__button}>\r\n          <div className={p.window__button_action}>\r\n            <button className={p.button} onClick={onDeleteProject} type=\"button\"  name=\"button\">Delete </button> \r\n          </div>\r\n          <div className={p.window__button_action}>\r\n            <button className={p.button} onClick={onCancel} type=\"button\"  name=\"button\">Cancel </button> \r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nDeleteConfirmationWindow.propTypes = {\r\n  cancelDelete: PropTypes.func,\r\n  deleteProject: PropTypes.func\r\n}\r\n\r\n\r\nexport default DeleteConfirmationWindow","import React from \"react\"\r\nimport p from \"./project-general.module.css\" \r\nimport { Field, reduxForm } from \"redux-form\"\r\nimport {Input, Textarea} from \"../../utils/form-control\"\r\nimport {required, checkformat} from \"../../utils/validators/validators\"\r\nimport PropTypes from \"prop-types\" \r\n\r\nconst EditForm = (props: any) => {\r\n\r\n\tconst onCancelEdit = () => {\r\n\t\tprops.cancelEdit()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form  className={p.form} onSubmit = {props.handleSubmit} >\r\n\t\t\t\t<Field component={Input}  validate={[required, checkformat]}    name=\"titleEdit\"  />\r\n\t\t\t\t<Field component={Textarea}  cols=\"40\" rows=\"10\"  className={p.textarea} validate={[required]} name=\"descriptionEdit\"   />\r\n\t\t\t\t<button>Submit</button>\r\n\t\t\t\t<button onClick={onCancelEdit}>Cancel</button>\r\n\t\t\t</form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport const EditFormRedux = reduxForm({\r\n\tform:\"editForm\",\r\n\tenableReinitialize: false\r\n})(EditForm)\r\n\r\nEditFormRedux.propTypes = {\r\n\tprojectsList: PropTypes.object,\r\n\tcancelEdit: PropTypes.func\r\n}\r\n\r\nexport default EditFormRedux","import React, {useState} from \"react\"\r\nimport DeleteConfirmationWindow from \"./delete-confirmation-window\"\r\nimport EditFormRedux from \"./edit-form\"\r\nimport p from \"./project-general.module.css\"\r\n\r\ninterface ProjectEditForm {\r\n    titleEdit:string,\r\n    descriptionEdit: string\r\n  }\r\n\r\nconst ShowFullProjectData = (props:any) => {\r\n\tconst [popap , setPopap] = useState(false)\r\n\r\n\tconst onEditMode = () => {                                      \r\n\t\tprops.setEditMode(true)\r\n\t\tprops.setInitialValue(props.projectsList)\r\n\t}\r\n\tconst onSaveEdit = (value:ProjectEditForm):void => {\r\n\t\tprops.editUserProject(value.titleEdit, value.descriptionEdit.trim(), props.projectsList._id, props.token)     \r\n\t\tprops.setEditMode(false)\r\n\r\n\t}\r\n\r\n\tconst onCompfirmDeleteProject = (answer) => {\r\n\t\tsetPopap(true)\r\n\t}\r\n\r\n\tconst deleteProject = () => {\r\n\t\tprops.removeUsersProject(props.projectsList._id, props.token)\r\n\t\tsetPopap(false)\r\n\t}\r\n\r\n\tconst cancelDelete = () => {\r\n\t\tsetPopap(false)\r\n\t}\r\n\r\n\tconst onCancelEdit = () => {\r\n\t\tprops.setEditMode(false)\r\n\t}\r\n    \r\n\tconst getInitialValues = () => {\r\n\t\treturn {\r\n\t\t\ttitleEdit: props.initialValue.title,\r\n\t\t\tdescriptionEdit: props.initialValue.description\r\n\t\t}\r\n\t}\r\n   \r\n\treturn (\r\n\t\t<div  className={p.project__info}>\r\n\t\t\t{popap && \r\n                <DeleteConfirmationWindow cancelDelete={cancelDelete} deleteProject={deleteProject} />\r\n\t\t\t}\r\n\t\t\t{!props.editFlag &&\r\n                <div>\r\n                \t<div className={p.project__title}>\r\n                \t\t{props.projectsList.title}\r\n                \t\t<div>\r\n                \t\t\t<button className={p.button} onClick = {onEditMode} >Edit</button>\r\n                \t\t</div>\r\n                \t\t<div>\r\n                \t\t\t<button className={p.button} onClick={onCompfirmDeleteProject} type=\"button\"  name=\"button\">Delete </button> \r\n                \t\t</div>\r\n                \t</div>\r\n                \t<div className={p.project__description}>\r\n                \t\t{props.projectsList.description}\r\n                \t</div>\r\n                </div>\r\n\t\t\t}\r\n\t\t\t{ props.editFlag &&\r\n                <>\r\n                \t<div>\r\n                \t\t<EditFormRedux onSubmit ={onSaveEdit} \r\n                \t\t\tprojectsList ={props.projectsList} \r\n                \t\t\tcancelEdit={onCancelEdit}\r\n                \t\t\tinitialValues={getInitialValues()}\r\n                \t\t/>\r\n                \t</div>\r\n                </>\r\n\t\t\t}\r\n\t\t</div>\r\n        \r\n\t)\r\n}\r\n\r\nexport default ShowFullProjectData","import React from \"react\";\r\nimport p from './project-general.module.css'\r\nimport ShowFullProjectData from './full-project-data';\r\n\r\ninterface ShowFullProject {\r\n    token: string,\r\n    projectsList: ProjectsList,\r\n    ShowFullProject:object ,\r\n    initialValue: object,\r\n    editFlag: boolean,\r\n    setEditMode: object,\r\n    removeUsersProject:object ,\r\n    editUserProject:object,\r\n    setInitialValue: object\r\n  }\r\n\r\nconst ProjectsList = (props:ShowFullProject) => {\r\n    return (\r\n        <div className={p.projects__container}>\r\n                 <ShowFullProjectData     initialValue={props.initialValue} \r\n                                          editFlag = {props.editFlag}\r\n                                          setInitialValue = {props.setInitialValue}\r\n                                          setEditMode={props.setEditMode}\r\n                                          token={props.token}\r\n                                          removeUsersProject={props.removeUsersProject}\r\n                                          editUserProject={props.editUserProject}\r\n                                          projectsList = {props.projectsList} \r\n             /> \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default ProjectsList;","import {UsersApi} from '../api/api' \r\nimport { act } from 'react-dom/test-utils';\r\nconst GET_USERS_PROJECTS = 'GET_USERS_PROJECTS'; \r\nconst EDIT_STATUS = 'EDIT_STATUS';\r\nconst SET_INITIAL_VALE = 'SET_INITIAL_VALE';\r\nconst FLAG = 'FLAG'\r\nlet initialState = {\r\n   token: null,\r\n   projectsList: [],\r\n   status:null,\r\n   initialValue:null,\r\n   editFlag:null\r\n  }\r\n\r\n  const projectReducer = ( state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case GET_USERS_PROJECTS: \r\n      return {\r\n        ...state, projectsList: action.data,\r\n\r\n      }\r\n      case EDIT_STATUS:\r\n        return {\r\n          ...state, status: action.status\r\n        }\r\n        case SET_INITIAL_VALE:\r\n          return {\r\n            ...state, initialValue: action.el,\r\n\r\n          }\r\n          case FLAG:\r\n            return {\r\n              ...state, editFlag: action.editFlag\r\n            }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n\r\nconst getUsersProjectsList = (data: object) => {\r\n  console.log(data)\r\n  return {\r\n    type: GET_USERS_PROJECTS,\r\n    data\r\n    \r\n  }\r\n  \r\n}\r\n\r\nconst checkEditStatus = (status: string) => {\r\n  return {\r\n    type: EDIT_STATUS,\r\n    status\r\n  }\r\n}\r\nconst setMode = (el) => {\r\n  console.log(el)\r\n  return {\r\n    type: SET_INITIAL_VALE,\r\n    el\r\n  }\r\n}\r\n\r\nconst setFlagMode = (editFlag) => {\r\n  console.log(editFlag)\r\n  return {\r\n    type: FLAG,\r\n    editFlag\r\n  }\r\n}\r\n\r\nexport const editUserProject = (title: string, description: string,id: string, token:string) => {\r\n  return  async (dispatch: any) => {\r\n     let data = await UsersApi.saveEditedProject(title, description,id, token);\r\n       dispatch(getUsersProjectsList(data))\r\n       console.log(data)\r\n  }  \r\n}\r\n\r\nexport const getUsersProjects = (token: string) => {\r\n  return  async (dispatch: any) => {\r\n     let data = await UsersApi.getProjectsList(token);\r\n       dispatch(getUsersProjectsList(data)) \r\n  }  \r\n}\r\nexport const removeUsersProject = (id: string, token: string) => {\r\n  return   async (dispatch: any) => {\r\n     let data = await UsersApi.deleteProject(id, token);\r\n     dispatch(getUsersProjectsList(data)) \r\n  }\r\n}\r\n\r\nexport const setInitialValue = (el) => {\r\n  return   async (dispatch: any) => {\r\n     dispatch(setMode(el)) \r\n  }\r\n}\r\n\r\nexport const setEditMode = (editFlag) => {\r\n  return   async (dispatch: any) => {\r\n     dispatch(setFlagMode(editFlag)) \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nexport default projectReducer;","import React, {useEffect} from \"react\"\r\nimport {connect} from   \"react-redux\"\r\nimport ProjectsList from \"./projects-list\"\r\nimport {getUsersProjects, editUserProject, removeUsersProject, setInitialValue, setEditMode} from \"../../redux/project-reducer\"\r\nimport { Redirect } from \"react-router-dom\" \r\nimport Accordion from \"@material-ui/core/Accordion\"\r\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\"\r\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\"\r\nimport p from \"./project-general.module.css\"\r\nimport PropTypes from \"prop-types\" \r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\"\r\n\r\n\r\ninterface ProjectsList {\r\n  _id: string,\r\n  title:string,\r\n  description: string,\r\n  token: string\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n\tcreateStyles({\r\n\t\troot: {\r\n\t\t\twidth: \"100%\",\r\n\t\t},\r\n\t\theading: {\r\n\t\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\t\tflexBasis: \"33.33%\",\r\n\t\t\tflexShrink: 0,\r\n\t\t},\r\n\t\tsecondaryHeading: {\r\n\t\t\tfontSize: theme.typography.pxToRem(15),\r\n\t\t\tcolor: theme.palette.text.secondary,\r\n\t\t},\r\n\t\tMuiButtonBaseroot: {\r\n\t\t\twidth: \"109px\",\r\n\t\t\theight: \"6px\",\r\n\t\t}\r\n\t}),\r\n)\r\n\r\nconst ProjectGeneral = (props:any) => {\r\n\r\n\tuseEffect(() => {\r\n\t\tprops.getUsersProjects(props.token)\r\n\t}, []) \r\n\r\n\tconst classes = useStyles()\r\n\tconst [expanded, setExpanded] = React.useState<string | false>(false)\r\n\r\n\tconst handleChange = (panel: string) => (event: React.ChangeEvent<any>, isExpanded: string | boolean) => {\r\n\t\tsetExpanded(isExpanded ? panel : false)      \r\n\t}\r\n\r\n\tif(!props.token) {\r\n\t\treturn <Redirect to={\"/login\"} />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={p.projects}>\r\n\t\t\t{ props.projectsList.map( (el:ProjectsList , index:number) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<div key={index}>\r\n\t\t\t\t\t\t{el.title}\r\n\t\t\t\t\t\t<Accordion expanded={expanded === index} onChange={handleChange(index)}>\r\n\t\t\t\t\t\t\t<AccordionSummary\r\n\t\t\t\t\t\t\t\taria-controls=\"panel1bh-content\"\r\n\t\t\t\t\t\t\t\tid=\"panel1bh-header\"\r\n\t\t\t\t\t\t\t\tclassName={classes.MuiButtonBaseroot}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<button  className={p.button}  onClick={() => {props.setEditMode(false)}}>Expander</button>\r\n\t\t\t\t\t\t\t</AccordionSummary>\r\n\t\t\t\t\t\t\t<AccordionDetails>\r\n\t\t\t\t\t\t\t\t<ProjectsList initialValue={props.initialValue} \r\n\t\t\t\t\t\t\t\t\teditFlag={props.editFlag} \r\n\t\t\t\t\t\t\t\t\tsetInitialValue = {props.setInitialValue}\r\n\t\t\t\t\t\t\t\t\tsetEditMode={props.setEditMode}\r\n\t\t\t\t\t\t\t\t\tkey={index} \r\n\t\t\t\t\t\t\t\t\tremoveUsersProject={props.removeUsersProject} \r\n\t\t\t\t\t\t\t\t\tgetUsersProjects={props.getUsersProjects}\r\n\t\t\t\t\t\t\t\t\ttoken={props.token}\r\n\t\t\t\t\t\t\t\t\teditUserProject={props.editUserProject}  \r\n\t\t\t\t\t\t\t\t\tprojectsList ={el} />\r\n\t\t\t\t\t\t\t</AccordionDetails>\r\n\t\t\t\t\t\t</Accordion>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t})}\r\n\t\t</div>\r\n  \r\n\t)\r\n}\r\n\r\nProjectGeneral.propTypes = {  \r\n\ttoken: PropTypes.string,\r\n\tprojectsList: PropTypes.array,\r\n\tstatus: PropTypes.string,\r\n\tgetUsersProjects: PropTypes.func,\r\n\teditUserProject: PropTypes.func,\r\n\tremoveUsersProject: PropTypes.func\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n\treturn {\r\n\t\ttoken: state.login.token,\r\n\t\tprojectsList: state.projects.projectsList,\r\n\t\tstatus: state.projects.status,\r\n\t\tinitialValue: state.projects.initialValue,\r\n\t\teditFlag: state.projects.editFlag\r\n\t}\r\n\r\n}\r\n\r\n\r\nconst ProjectGeneralContainer = connect(mapStateToProps, {getUsersProjects, editUserProject, removeUsersProject, setInitialValue, setEditMode} )(ProjectGeneral)\r\nexport default ProjectGeneralContainer","import React, { useState, useRef } from \"react\";\nimport { NavLink, Route } from 'react-router-dom'\nimport s from './settings.module.css'\nconst Settings = (props) => { \n\n    const [mode, setMode] = useState(false);\n    const handleChange = () => {\n     setMode(!mode)\n     props.triggerSearch(mode);\n       \n   }\n    return (\n       <div className={s.settings}>\n             <input\n                  type=\"checkbox\"\n                  name={'name'}\n                  onChange={handleChange}\n             />\n             <span>Light/Dark</span>\n       </div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport Sidebar from \"../sidebar/sidebar.component\";\nimport ProjectCreatorContainer from '../projests-creator/project-creator-container.component';\nimport ProjectGeneralContainer from '../project-general/project-general-container.component';\nimport {Route} from  'react-router-dom';\nimport Settings from \"../settings/settings.component\";\nimport main from './main.module.css';\n\nconst Main = (props) => {\n    return (\n        <div className={main.main}>\n            <div className={main.main__sidebar}>\n                <Sidebar/>\n            </div>\n            <div className={main.main__general}>\n                <Route path='/main/create-project'  component = { ProjectCreatorContainer } />\n                <Route path='/main/projects'  render = { () => {\n                   return    <React.Suspense>\n                      <ProjectGeneralContainer/>\n                     </React.Suspense>\n                    }} />\n                <Route path='/main/settings'  render = { () => {\n                   return    <React.Suspense>\n                      <Settings triggerSearch={props.triggerSearch}/>\n                     </React.Suspense>\n                    }} />\n            </div>\n        </div>\n    )\n}\n\nexport default Main;\n","import {createStore} from 'redux';\r\nimport {applyMiddleware} from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport loginReducer from './login-reducer'\r\nimport projectReducer from './project-reducer'\r\nimport projectCreatorReducer from './project-—Åreator-reducer'\r\nlet reducers = combineReducers({\r\n projectCreator:projectCreatorReducer,\r\n login:loginReducer,\r\n projects: projectReducer,\r\n form: formReducer\r\n});\r\n\r\nconst saveToLocalStorage = (state) => {\r\n    try {\r\n      const serializedState = JSON.stringify(state)\r\n      localStorage.setItem('state', serializedState)\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\nconst loadFromLocalStorage = () => {\r\n    try {\r\n      const serializedState =  localStorage.getItem('state')\r\n      if (serializedState === null) return undefined\r\n      return JSON.parse(serializedState)\r\n    } catch(e) {\r\n      console.log(e);\r\n      return undefined;\r\n    }\r\n}  \r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n\r\n  \r\nlet store: any = createStore(reducers,persistedState,applyMiddleware(thunkMiddleware));\r\nstore.subscribe(()=> saveToLocalStorage(store.getState()))\r\nwindow.store = store;\r\n\r\nexport default  store;","import React, { useState } from 'react';\nimport './App.css';\nimport Login from './components/login/login-container.component';\nimport Main from './components/main/main.component';\n\nimport {HashRouter, Route, Redirect, BrowserRouter} from  'react-router-dom';\nimport {Provider} from  'react-redux';\nimport store from './redux/redux_store'\n\n\nconst App = () => { \n\n  const [mode, setMode] = useState(true);\n  const triggerSearch = (value:Boolean) => {\n    localStorage.setItem(\"mode\", value)\n    setMode(value)\n  }\n  return (\n    <div className={mode? \"container_light\": \"container_dark\"}>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider  store ={store} >\n        <Route exact path='/' render={() => <Redirect to='/login'/>}/>\n          <div>\n            <Route path='/login'  render= { ()=> {\n              return  <React.Suspense>\n                         <div class='container__login'>\n                             <Login />\n              \n                         </div>\n                    </React.Suspense>\n            }} />\n          </div>\n          <div >\n          <Route path='/main'  render= { ()=> {\n           return  <React.Suspense>\n            <div className=\"container__main\">\n                <Main triggerSearch={triggerSearch} />\n            </div>\n              </React.Suspense>\n        }} />\n         </div>\n         </Provider>\n       </HashRouter>\n    \n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"project-creator_form__2oZgc\",\"message\":\"project-creator_message__3iGSO\",\"container\":\"project-creator_container__3GLji\",\"info\":\"project-creator_info__2q9uX\",\"textarea\":\"project-creator_textarea__1o76K\",\"error\":\"project-creator_error__2O1FI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__page\":\"login_login__page__qgthF\",\"form\":\"login_form__Fv0Ml\",\"message\":\"login_message__2PgTH\",\"container\":\"login_container__uZxKL\",\"info\":\"login_info__3cpon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"form-control_form_control__1RMN8\",\"error\":\"form-control_error__218LK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__3A9qg\",\"main__sidebar\":\"main_main__sidebar__cU6C8\",\"main__general\":\"main_main__general__5rodv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"project-general_projects__3kxkZ\",\"projects__list\":\"project-general_projects__list__3cPdw\",\"project__button\":\"project-general_project__button__1uOnt\",\"button\":\"project-general_button__w-v8b\",\"project__title\":\"project-general_project__title__1i0Gd\",\"form\":\"project-general_form__3MrXX\",\"message\":\"project-general_message__1jV2C\",\"textarea\":\"project-general_textarea__auZGE\",\"project__info\":\"project-general_project__info__2Qh6U\",\"project__description\":\"project-general_project__description__92Iu8\",\"modal\":\"project-general_modal__xj-aJ\",\"modal__window\":\"project-general_modal__window__2dUx-\",\"window__button\":\"project-general_window__button__BkcYn\",\"window__title\":\"project-general_window__title__3aStG\",\"active\":\"project-general_active__3eBHX\"};"],"sourceRoot":""}