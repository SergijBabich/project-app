{"version":3,"sources":["components/sidebar/sidebar.module.css","components/settings/settings.module.css","utils/validators/validators.ts","utils/form-control.tsx","components/login/login.component.tsx","api/api.ts","redux/login-reducer.ts","components/login/login-container.component.ts","components/sidebar/sidebar.component.tsx","components/project-creator/project_creator.component.tsx","redux/project-—Åreator-reducer.ts","components/project-creator/project-creator-container.component.tsx","components/project-general/project-general.component.tsx","redux/project-reducer.ts","components/project-general/project-general-container.component.tsx","components/settings/settings.component.tsx","components/main/main.component.tsx","redux/redux_store.ts","App.tsx","serviceWorker.js","index.js","components/project-creator/project-creator.module.css","utils/form-control.module.css","components/login/login.module.css","components/main/main.module.css","components/project-general/project-general.module.css"],"names":["module","exports","maxLength","minLength","FormControl","input","meta","props","child","hasError","touched","error","className","s","form_control","children","Input","restProps","Textarea","required","value","checkformat","replace","minLength8","length","LoginFormRedux","reduxForm","form","history","useHistory","currentToken","push","m","login__form","onSubmit","handleSubmit","login","Field","component","validate","name","placeholder","type","Login","currentFont","JSON","parse","localStorage","getItem","token","errorCode","sendFormForAuthorization","password","setTimeout","message","instance","axios","baseURL","UsersApi","get","then","response","data","title","description","post","id","put","delete","initialState","status","sendCode","setUserToken","loginReducer","state","action","LoginContainer","connect","dispatch","a","Sidebar","sidebar","to","activeClassName","onClick","clear","ProjestsTitleRedux","p","checkTtitle","ProjestsDescriptionRedux","cols","rows","textarea","ProjectCreator","useState","step","setStep","setTitle","setCheckTitle","setProjectsTitle","projectsList","find","el","setProjectsDescription","createUsersProject","switchForms","projectId","projectCreatorReducer","ProjectCreatorContainer","projectCreator","projects","console","log","ProjectsList","show","setShow","projects__container","projects__list","project__title","project__button","button","removeUsersProject","editUserProject","ShowFullProjectData","popap","setPopap","edit","setEdit","hideForm","project__info","cancelDelete","deleteProject","_id","answer","project__description","EditFormRedux","titleEdit","descriptionEdit","trim","initialValues","DeleteConfirmationWindow","modal","modal__window","window__title","window__button","window__button_action","enableReinitialize","ProjectGeneral","useEffect","getUsersProjects","map","index","key","getUsersProjectsList","projectReducer","ProjectGeneralContainer","Settings","mode","setMode","settings","onChange","triggerSearch","Main","main","main__sidebar","main__general","path","render","Suspense","reducers","combineReducers","formReducer","persistedState","serializedState","e","loadFromLocalStorage","store","createStore","applyMiddleware","thunkMiddleware","subscribe","stringify","setItem","saveToLocalStorage","getState","window","App","basename","process","exact","class","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0e8cbfb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar_sidebar__Y80ct\",\"active\":\"sidebar_active__2zaX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"settings_settings__132Wp\"};","export const required = (value: any) => {\r\n    if (value)  return undefined;\r\n    return 'Field is required';\r\n  \r\n  }\r\n  \r\n  export const requiredFieldMaxValue = (value: any) => {\r\n    if (value) {if (value.length > 20)  return `Max length is ${20} symbols`;\r\n      return undefined;\r\n      }\r\n    return 'Field is required';\r\n  }\r\n\r\n  export const checkformat = (value: any) => {\r\n    if (value) {if (value !== value.replace(/[^A-Za-z]/ig, ''))  return `must contain only English letters`;\r\n      return undefined;\r\n      }\r\n    return 'Field is required';\r\n  }\r\n  \r\n  \r\n  export const maxLengthCreator = (maxLength: any) => (value) => {\r\n    if (value.length > maxLength)  return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n  \r\n  }\r\n\r\n  export const minLengthCreator = (minLength: any) => (value) => {\r\n    if (value.length < minLength) return `Min length is ${minLength} symbols`;\r\n    return undefined;\r\n  }","import React from 'react';\r\nimport s from './form-control.module.css';\r\nimport { Field, reduxForm} from 'redux-form';\r\n\r\nconst FormControl = ({input, meta, child,...props}) => {\r\n   const hasError = meta.touched && meta.error;\r\n   return (\r\n     <div className={s.form_control+\" \"+ (hasError? s.error: \"\")}>\r\n      <div>\r\n        {props.children}\r\n      </div>\r\n      <div>\r\n      { hasError && <span className={s.error}>{meta.error}</span>}\r\n      </div>\r\n     </div>\r\n   )\r\n}\r\n\r\n\r\nexport const Input = (props: any) => {\r\n   const {input, meta, child,...restProps} = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\nexport const Textarea = (props: any) => {\r\n   const {input, meta, child,...restProps} = props;\r\n   return <FormControl {...props}> <textarea {...input} {...restProps} /> </FormControl>\r\n}\r\nexport const File = (props: any) => {\r\n   const {input, meta, child,...restProps} = props;\r\n   return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}\r\n\r\nexport const createField = (name, placeholder, component, type) =>\r\n {\r\n  return (\r\n     <Field name={name}\r\n  placeholder={placeholder}\r\n  component={component}\r\n  type={type} />\r\n)\r\n}","import React, {useState} from \"react\";\nimport { Field, reduxForm } from 'redux-form';\nimport {Input} from '../../utils/form-control';\nimport {File} from '../../utils/form-control';\nimport { Redirect } from \"react-router-dom\"; \nimport {required , maxLengthCreator, minLengthCreator, checkformat} from '../../utils/validators/validators';\nimport { useHistory } from \"react-router-dom\";\nimport m from './login.module.css'\nconst maxLength20 = maxLengthCreator(20);\nconst minLength8 = minLengthCreator(4);\n\nconst Login = (props:any) => {\n  \n    let history = useHistory();\n    let currentToken;\n    let  currentFont = JSON.parse(localStorage.getItem('state'));\n    if (currentFont) {\n         currentToken = currentFont.login.token;\n    }\n\n    const onSubmitAuthorization = (value: any) => {        \n        if(!props.login) {\n            props.sendFormForAuthorization(value.login, value.password);\n        } \n        if(props.login) {\n            props.sendFormForAuthorization(props.login, value.password);\n            setTimeout(()=>history.push(\"/main/projects\"),150) \n        }\n    }\n\n    return (\n        <div className={m.form}>\n            <LoginFormRedux currentToken={currentToken} login={props.login} errorCode={props.errorCode} onSubmit={onSubmitAuthorization} />\n            {props.errorCode && <div className={m.message}>{props.errorCode}</div> }\n          </div>\n     \n\n    )\n}\n\nconst LoginForm = (props:any) => {\n\n    let history = useHistory();\n\n    if(props.currentToken) {\n         history.push(\"/main/projects\")\n    }\n    return (\n        <>\n         <form className={m.login__form}  onSubmit = {props.handleSubmit}>\n                 {!props.login? <h3>Log In</h3>:<h3 >Welcome {props.login}</h3> } \n                 {!props.login && <Field component={Input}  validate={[required ]}    name={'login'}  placeholder='Enter login' />}\n                                 <Field component={Input}  validate={[required, minLength8]} type='password'    name={'password'}  placeholder='Enter password' />\n             <button> Submit</button>\n          </form>   \n        </>\n    )\n}\n\nconst LoginFormRedux = reduxForm({\n    form:'postSound'\n  })(LoginForm)\n  \nexport default Login;\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport * as axios from 'axios';\r\n\r\n/*let  bodyFormData = new FormData();\r\n    bodyFormData.append(\"file\", file);\r\n    bodyFormData.set(\"api_token\", 'e18f6001fd4236175f7dc468d0470702');\r\n    bodyFormData.set(\"return\", \"timecode,apple_music,deezer,spotify\");*/\r\nconst instance = axios.create({\r\n  baseURL: 'https://project23e.herokuapp.com/',\r\n});\r\n\r\nexport const UsersApi = {\r\n    login<T>(login: any, password: any): Promise<T> {\r\n        return instance.get(`/get-users?login=${login}&password=${password}`, {\r\n            login,\r\n            password\r\n        }).then(response  => { return response.data}, (error) => {  return error; })\r\n    },\r\n    createNewProject(title:string, description:string, token:string) {\r\n        return instance.post(`create-new-project/${token}`, {\r\n            title, description,token\r\n        }).then(response => {        \r\n            return response.data;\r\n        })\r\n    },\r\n    saveEditedProject(title: string, description: string, id: string, token: string) {\r\n        return instance.put(`user-ptoject/${id}`, {\r\n            title,\r\n            description,\r\n            token\r\n        }).then(response => {      \r\n            return response.data;\r\n        })\r\n    },\r\n    getProjectsList(token: string) {\r\n        return instance.get(`/user-ptojects?token=${token}`, {\r\n            token\r\n        }).then(response => {\r\n            return response.data;\r\n        })\r\n    },\r\n    deleteProject(id: string, token: string) {\r\n        return instance.delete(`/delete-project/?id=${id}&token=${token}`).then(response => {\r\n            return response.data;\r\n        });\r\n    }\r\n}\r\n","import {UsersApi} from '../api/api' \r\nimport { act } from 'react-dom/test-utils';\r\nconst SET_USER_DATA = 'SET-USER-DATA'; \r\nconst SET_ERROR_DATA = 'SET_ERROR_DATA';\r\n\r\n interface initialState {\r\n  token?: string | null,\r\n  status?:string | null,\r\n  sendCode?:string | null,\r\n  login?:string | null,\r\n  errorCode?: string | null\r\n }\r\nlet initialState: initialState = {\r\n   token: null,\r\n   status:null,\r\n   sendCode:null,\r\n   login:null,\r\n   errorCode: null\r\n  }\r\n\r\n  const loginReducer = ( state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA: \r\n      return {\r\n      ...state,  token: action.data.token,\r\n                 status: action.data.status,\r\n                 login: action.data.login,\r\n                 errorCode: action.data.sendCode\r\n      }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n\r\nconst setUserToken = (data: any) => {\r\n  return {\r\n    type: SET_USER_DATA,\r\n    data\r\n    \r\n  }  \r\n}\r\n\r\n\r\nexport const sendFormForAuthorization = (login: string, password: string) => {\r\n  return  async (dispatch: any) => {\r\n     let data = await UsersApi.login(login, password);\r\n       dispatch(setUserToken(data))\r\n  }  \r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default loginReducer;","\r\nimport React from 'react';\r\nimport {connect} from   'react-redux';\r\nimport Login from './login.component';\r\nimport {sendFormForAuthorization} from '../../redux/login-reducer'\r\n\r\nlet mapStateToprops = (state: any) => {\r\n  return {\r\n    token: state.login.token,\r\n    status: state.login.status,\r\n    login: state.login.login,\r\n    errorCode: state.login.errorCode\r\n  }\r\n\r\n}\r\n\r\n\r\nconst LoginContainer = connect(mapStateToprops, {sendFormForAuthorization} )(Login);\r\nexport default LoginContainer;","import React from \"react\";\nimport { NavLink, Route } from 'react-router-dom'\nimport s from './sidebar.module.css'\nconst Sidebar = () => {\n    const onEndSession = () => {\n        localStorage.clear();\n    }\n    return (\n        <nav>\n            <div className={s.sidebar}>\n                <NavLink to=\"/main/projects\" activeClassName=\"selected\">My projects </NavLink>\n                <NavLink to=\"/main/create-project\" activeClassName=\"selected\">Create project</NavLink> \n                <NavLink to=\"/login\" activeClassName=\"selected\"><div onClick={onEndSession}>Log Out</div></NavLink>\n                <NavLink to=\"/main/settings\" activeClassName=\"selected\">Settings</NavLink> \n            </div>\n            \n\n        </nav>\n    )\n}\n\nexport default Sidebar;\n","import React, {useState} from \"react\";\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {Input, Textarea} from '../../utils/form-control';\r\nimport {File} from '../../utils/form-control';\r\nimport { Redirect} from \"react-router-dom\"; \r\nimport {required, checkformat} from '../../utils/validators/validators';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport p from './project-creator.module.css'\r\n\r\ninterface Form {\r\n    title?: string,\r\n    description?:string\r\n}\r\n\r\nconst ProjectCreator = (props:any) => {\r\n    const [step, setStep] = useState(1);\r\n    const [title, setTitle] = useState(null);\r\n    const [checkTtitle, setCheckTitle] = useState(false);\r\n    let history = useHistory();\r\n\r\n    const setProjectsTitle = (value:Form) => {\r\n       setTitle(value.title);\r\n       let findTheSameTitleName = props.projectsList.find((el) => el.title === value.title);\r\n\r\n       if(!findTheSameTitleName) {\r\n        setStep(step +1)\r\n       } else {\r\n        setCheckTitle(true);\r\n       }\r\n\r\n    }\r\n    \r\n    const checkValueTitle = () => {\r\n        return (\r\n            <div>\r\n                no no no\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const setProjectsDescription = (value:Form) => {\r\n        props.createUsersProject(title, value.description, props.token);\r\n        setStep(step+1)\r\n    }\r\n\r\n    const redirect = () => {\r\n        setTimeout(() =>history.push(\"/main/projects\") , 2000);       \r\n    }\r\n    \r\n    if(step ===3 ) {  \r\n        redirect()\r\n    }\r\n\r\n    if(!props.token) {\r\n        return <Redirect to={`/login`} />;\r\n    }\r\n   \r\n\r\n    const switchForms = () => {  \r\n        switch(step) {\r\n            case 1: \r\n            return(\r\n                <ProjestsTitleRedux checkTtitle={checkTtitle} onSubmit={setProjectsTitle} /> \r\n            )\r\n            case 2: \r\n            return(\r\n                <ProjestsDescriptionRedux onSubmit={setProjectsDescription} />\r\n            )\r\n            default:\r\n                return <div>–ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω</div>;     \r\n        } \r\n      }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                switchForms()\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst ProjestsTitleForm = (props:any) => {\r\n    return (\r\n        <>\r\n         <form   className={p.form} onSubmit = {props.handleSubmit}>\r\n             <h3 >Enter title</h3>\r\n             <Field component={Input}     validate={[required, checkformat]}  name={'title'}  placeholder='String from soung' />\r\n             <button> Next </button>\r\n             {props.checkTtitle && <div className={p.error}>this title already exist </div>}\r\n          </form>   \r\n          {}\r\n        </>\r\n    )\r\n}\r\n\r\nconst ProjestsDescriptionForm = (props:any) => {\r\n    return (\r\n        <>\r\n         <form   className={p.form} onSubmit = {props.handleSubmit}>\r\n             <h1 >Enter description </h1>\r\n             <Field component={Textarea}  cols=\"40\" rows=\"10\"  className={p.textarea} validate={[required]}  name={'description'}/>\r\n             <button> Submit</button>\r\n          </form>   \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nconst ProjestsTitleRedux = reduxForm({\r\n    form:'title'\r\n  })(ProjestsTitleForm)\r\n\r\nconst ProjestsDescriptionRedux = reduxForm({\r\n    form:'description'\r\n  })(ProjestsDescriptionForm)\r\n\r\nexport default ProjectCreator;","import {UsersApi} from '../api/api'\r\n\r\nconst SET_PROJECT_ID = 'SET-PROJECT-ID'; \r\nlet initialState = {\r\n    projectId: null,\r\n  }\r\n\r\n  const projectCreatorReducer = ( state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case SET_PROJECT_ID: \r\n      return {\r\n        projectId: action.projectId,\r\n\r\n      }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n\r\nconst setProjectToken = (projectId) => {\r\n  return {\r\n    type: SET_PROJECT_ID,\r\n    projectId\r\n    \r\n  }\r\n  \r\n}\r\n\r\nexport const createUsersProject = (title, description, token) => {\r\n  return  async (dispatch) => {\r\n    console.log(title, description ,token)\r\n    let data = await UsersApi.createNewProject(title, description, token);\r\n     dispatch(setProjectToken(data.projectId))\r\n  }  \r\n\r\n  }\r\n\r\nexport default projectCreatorReducer;","\r\nimport React from 'react';\r\nimport {connect} from   'react-redux';\r\nimport ProjectCreator from './project_creator.component';\r\nimport {createUsersProject} from '../../redux/project-—Åreator-reducer'\r\nlet mapStateToprops = (state: any) => {\r\n  return {\r\n    token: state.login.token,\r\n    projectId: state.projectCreator.projectId,\r\n    projectsList: state.projects.projectsList,\r\n  }\r\n\r\n}\r\n\r\n\r\nconst ProjectCreatorContainer = connect(mapStateToprops, {createUsersProject} )(ProjectCreator);\r\nexport default ProjectCreatorContainer;","import React, {useEffect, useState } from \"react\";\r\nimport p from './project-general.module.css'\r\nimport { Redirect } from \"react-router-dom\"; \r\nimport { Field, reduxForm, Form } from 'redux-form';\r\nimport {Input, Textarea} from '../../utils/form-control';\r\nimport {required, checkformat} from '../../utils/validators/validators';\r\n\r\ninterface ProjectEditForm {\r\n    titleEdit:string,\r\n    descriptionEdit: string\r\n}\r\n\r\ninterface ProjectsList {\r\n    _id: string,\r\n    title:string,\r\n    description: string,\r\n    token: string\r\n}\r\ninterface ShowFullProject {\r\n    setShow: object,\r\n    token: string,\r\n    removeUsersProject: object,\r\n    editUserProject: object,\r\n    projectsList: ProjectsList\r\n}\r\n\r\nconst ProjectGeneral = (props:any) => {\r\n\r\n   useEffect(() => {\r\n     props.getUsersProjects(props.token)\r\n    }, []); \r\n\r\n    if(!props.token) {\r\n        return <Redirect to={`/login`} />;\r\n        }\r\n\r\n    return (\r\n        <div className={p.projects}>\r\n          { props.projectsList.map( (el:ProjectsList , index:number) => {\r\n             return  <ProjectsList   key={index} status={props.status} removeUsersProject={props.removeUsersProject}  getUsersProjects={props.getUsersProjects} token={props.token} editUserProject={props.editUserProject}  projectsList ={el} />\r\n           }) }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst ProjectsList = (props:ShowFullProject) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const onShowDescription = () => {       \r\n        setShow(!show)\r\n    }\r\n\r\n    return (\r\n        <div className={p.projects__container}>\r\n            <div className={p.projects__list}>\r\n                <div className={p.project__title}>{props.projectsList.title}</div>\r\n                <div className={p.project__button}>\r\n                     <button  className={p.button}  onClick={ onShowDescription} >Expander</button>\r\n                </div>  \r\n            </div>\r\n            {show && <ShowFullProjectData setShow={setShow} \r\n                                          token={props.token}\r\n                                          removeUsersProject={props.removeUsersProject}\r\n                                          editUserProject={props.editUserProject}\r\n                                          projectsList = {props.projectsList} \r\n             /> }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nconst ShowFullProjectData = (props:any) => {\r\n    const [popap , setPopap] = useState(false);\r\n    const [edit, setEdit] = useState('disable');\r\n\r\n    const onEditMode = () => {\r\n        setEdit('enable')\r\n    }\r\n\r\n    const onSaveEdit = (value:ProjectEditForm):void => {\r\n        props.editUserProject(value.titleEdit, value.descriptionEdit.trim(), props.projectsList._id, props.token);\r\n          hideForm();        \r\n    }\r\n    const hideForm = () => {\r\n        props.setShow(false)\r\n        setEdit('disable')\r\n    }\r\n\r\n    const onCompfirmDeleteProject = (answer) => {\r\n        setPopap(true);\r\n    }\r\n\r\n    const deleteProject = () => {\r\n        props.removeUsersProject(props.projectsList._id, props.token);\r\n        props.setShow(false)\r\n    }\r\n\r\n    const cancelDelete = () => {\r\n        props.setShow(false)\r\n    }\r\n\r\n    return (\r\n     <div  className={p.project__info}>\r\n         {popap && <DeleteConfirmationWindow cancelDelete={cancelDelete} deleteProject={deleteProject} />}\r\n        { edit === 'disable' && \r\n        <div>\r\n            <div className={p.project__title}>\r\n              {props.projectsList.title}\r\n              <div>\r\n                <button className={p.button} onClick = {onEditMode} >Edit</button>\r\n              </div>\r\n              <div>\r\n                  <button className={p.button} onClick={onCompfirmDeleteProject} type=\"button\"  name=\"button\">Delete </button> \r\n              </div>\r\n            </div>\r\n            <div className={p.project__description}>\r\n              {props.projectsList.description}\r\n            </div>\r\n         </div>\r\n        }\r\n        { edit === 'enable' &&\r\n            <>\r\n              <div>\r\n                <EditFormRedux onSubmit ={onSaveEdit} \r\n                               projectsList ={props.projectsList} \r\n                               initialValues={{\r\n                                                titleEdit: props.projectsList.title,\r\n                                                descriptionEdit:props.projectsList.description\r\n                                                }}\r\n                                                 />\r\n              </div>\r\n            </>\r\n        }\r\n     </div>    \r\n        \r\n    )\r\n}\r\n\r\nconst DeleteConfirmationWindow = (props) => {\r\n    const onDeleteProject = () => {\r\n        props.deleteProject();\r\n    }\r\n    const onCancel = () => {\r\n        props.cancelDelete();\r\n    }\r\n    return (\r\n        <div className={p.modal}>\r\n          <div className={p.modal__window}>\r\n            <div className={p.window__title}>\r\n                    <h3>Do you really wanna delete the project</h3>\r\n                </div>\r\n                <div className={p.window__button}>\r\n                    <div className={p.window__button_action}>\r\n                        <button className={p.button} onClick={onDeleteProject} type=\"button\"  name=\"button\">Delete </button> \r\n                    </div>\r\n                    <div className={p.window__button_action}>\r\n                        <button className={p.button} onClick={onCancel} type=\"button\"  name=\"button\">Cancel </button> \r\n                    </div>\r\n                 </div>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst EditForm = (props:any) => {\r\n    return (\r\n        <>\r\n         <form  className={p.form} onSubmit = {props.handleSubmit} >\r\n             <Field component={Input}  validate={[required, checkformat]}    name={'titleEdit'}  />\r\n             <Field component={Textarea}  cols=\"40\" rows=\"10\"  className={p.textarea} validate={[required]} name={'descriptionEdit'}   />\r\n             <button>Submit</button>\r\n          </form>   \r\n        </>\r\n    )\r\n}\r\n\r\nexport const EditFormRedux = reduxForm({\r\n    form:'editForm',\r\n    enableReinitialize: true\r\n  })(EditForm)\r\n\r\n\r\nexport default ProjectGeneral;","import {UsersApi} from '../api/api' \r\nimport { act } from 'react-dom/test-utils';\r\nconst GET_USERS_PROJECTS = 'GET_USERS_PROJECTS'; \r\nconst EDIT_STATUS = 'EDIT_STATUS';\r\nlet initialState = {\r\n   token: null,\r\n   projectsList: [],\r\n   status:null\r\n  }\r\n\r\n  const projectReducer = ( state = initialState, action: any) => {\r\n  switch (action.type) {\r\n    case GET_USERS_PROJECTS: \r\n      return {\r\n         projectsList: action.data,\r\n\r\n      }\r\n      case EDIT_STATUS:\r\n        return {\r\n          ...state, status: action.status\r\n        }\r\n    default:\r\n        return state\r\n  }\r\n}\r\n\r\nconst getUsersProjectsList = (data: object) => {\r\n  return {\r\n    type: GET_USERS_PROJECTS,\r\n    data\r\n    \r\n  }\r\n  \r\n}\r\n\r\nconst checkEditStatus = (status: string) => {\r\n  return {\r\n    type: EDIT_STATUS,\r\n    status\r\n  }\r\n}\r\n\r\nexport const editUserProject = (title: string, description: string,id: string, token:string) => {\r\n  return  async (dispatch: any) => {\r\n     let data = await UsersApi.saveEditedProject(title, description,id, token);\r\n       dispatch(getUsersProjectsList(data))\r\n  }  \r\n}\r\n\r\nexport const getUsersProjects = (token: string) => {\r\n  return  async (dispatch: any) => {\r\n     let data = await UsersApi.getProjectsList(token);\r\n       dispatch(getUsersProjectsList(data)) \r\n  }  \r\n}\r\nexport const removeUsersProject = (id: string, token: string) => {\r\n  return   async (dispatch: any) => {\r\n     let data = await UsersApi.deleteProject(id, token);\r\n     dispatch(getUsersProjectsList(data)) \r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default projectReducer;","import {connect} from   'react-redux';\r\nimport ProjectGeneral from './project-general.component';\r\nimport {getUsersProjects, editUserProject, removeUsersProject} from '../../redux/project-reducer'\r\nlet mapStateToprops = (state: any) => {\r\n  return {\r\n    token: state.login.token,\r\n    projectsList: state.projects.projectsList,\r\n    status: state.projects.status\r\n  }\r\n\r\n}\r\n\r\n\r\nconst ProjectGeneralContainer = connect(mapStateToprops, {getUsersProjects, editUserProject, removeUsersProject} )(ProjectGeneral);\r\nexport default ProjectGeneralContainer;","import React, { useState, useRef } from \"react\";\nimport { NavLink, Route } from 'react-router-dom'\nimport s from './settings.module.css'\nconst Settings = (props) => { \n\n    const [mode, setMode] = useState(false);\n    const handleChange = () => {\n     setMode(!mode)\n     props.triggerSearch(mode);\n       \n   }\n    return (\n       <div className={s.settings}>\n             <input\n                  type=\"checkbox\"\n                  name={'name'}\n                  onChange={handleChange}\n             />\n             <span>Light/Dark</span>\n       </div>\n    )\n}\n\nexport default Settings;\n","import React from \"react\";\nimport Sidebar from \"../sidebar/sidebar.component\";\nimport ProjectCreatorContainer from '../project-creator/project-creator-container.component';\nimport ProjectGeneralContainer from '../project-general/project-general-container.component';\nimport {Route} from  'react-router-dom';\nimport Settings from \"../settings/settings.component\";\nimport main from './main.module.css';\nconst Main = (props) => {\n    return (\n        <div className={main.main}>\n            <div className={main.main__sidebar}>\n                <Sidebar/>\n            </div>\n            <div className={main.main__general}>\n                <Route path='/main/create-project'  component = { ProjectCreatorContainer } />\n                <Route path='/main/projects'  render = { () => {\n                   return    <React.Suspense>\n                      <ProjectGeneralContainer/>\n                     </React.Suspense>\n                    }} />\n                <Route path='/main/settings'  render = { () => {\n                   return    <React.Suspense>\n                      <Settings triggerSearch={props.triggerSearch}/>\n                     </React.Suspense>\n                    }} />\n            </div>\n        </div>\n    )\n}\n\nexport default Main;\n","import {createStore} from 'redux';\r\nimport {applyMiddleware} from 'redux';\r\nimport { combineReducers } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport loginReducer from './login-reducer'\r\nimport projectReducer from './project-reducer'\r\nimport projectCreatorReducer from './project-—Åreator-reducer'\r\nlet reducers = combineReducers({\r\n projectCreator:projectCreatorReducer,\r\n login:loginReducer,\r\n projects: projectReducer,\r\n form: formReducer\r\n});\r\n\r\nconst saveToLocalStorage = (state) => {\r\n    try {\r\n      const serializedState = JSON.stringify(state)\r\n      localStorage.setItem('state', serializedState)\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\nconst loadFromLocalStorage = () => {\r\n    try {\r\n      const serializedState =  localStorage.getItem('state')\r\n      if (serializedState === null) return undefined\r\n      return JSON.parse(serializedState)\r\n    } catch(e) {\r\n      console.log(e);\r\n      return undefined;\r\n    }\r\n}  \r\n\r\nconst persistedState = loadFromLocalStorage();\r\n\r\n\r\n  \r\nlet store: any = createStore(reducers,persistedState,applyMiddleware(thunkMiddleware));\r\nstore.subscribe(()=> saveToLocalStorage(store.getState()))\r\nwindow.store = store;\r\n\r\nexport default  store;","import React, { useState } from 'react';\nimport './App.css';\nimport LoginContainer from './components/login/login-container.component';\nimport Main from './components/main/main.component';\n\nimport {HashRouter, Route, Redirect, BrowserRouter} from  'react-router-dom';\nimport {Provider} from  'react-redux';\nimport store from './redux/redux_store'\n\n\nconst App = () => { \n\n  const [mode, setMode] = useState(true);\n  const triggerSearch = (value:Boolean) => {\n    localStorage.setItem(\"mode\", value)\n    setMode(value)\n  }\n  return (\n    <div className={mode? \"container_light\": \"container_dark\"}>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Provider  store ={store} >\n        <Route exact path='/' render={() => <Redirect to='/login'/>}/>\n          <div>\n            <Route path='/login'  render= { ()=> {\n              return  <React.Suspense>\n                         <div class='container__login'>\n                             <LoginContainer />\n              \n                         </div>\n                    </React.Suspense>\n            }} />\n          </div>\n          <div >\n          <Route path='/main'  render= { ()=> {\n           return  <React.Suspense>\n            <div className=\"container__main\">\n                <Main triggerSearch={triggerSearch} />\n            </div>\n              </React.Suspense>\n        }} />\n         </div>\n         </Provider>\n       </HashRouter>\n    \n    </div>\n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"project-creator_form__3OKLZ\",\"message\":\"project-creator_message__k2z4N\",\"container\":\"project-creator_container__35A-A\",\"info\":\"project-creator_info__hS9br\",\"textarea\":\"project-creator_textarea__3dC2h\",\"error\":\"project-creator_error__35AWh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_control\":\"form-control_form_control__1RMN8\",\"error\":\"form-control_error__218LK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__page\":\"login_login__page__qgthF\",\"form\":\"login_form__Fv0Ml\",\"message\":\"login_message__2PgTH\",\"container\":\"login_container__uZxKL\",\"info\":\"login_info__3cpon\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__3A9qg\",\"main__sidebar\":\"main_main__sidebar__cU6C8\",\"main__general\":\"main_main__general__5rodv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projects\":\"project-general_projects__3kxkZ\",\"projects__list\":\"project-general_projects__list__3cPdw\",\"project__button\":\"project-general_project__button__1uOnt\",\"button\":\"project-general_button__w-v8b\",\"project__title\":\"project-general_project__title__1i0Gd\",\"form\":\"project-general_form__3MrXX\",\"message\":\"project-general_message__1jV2C\",\"textarea\":\"project-general_textarea__auZGE\",\"project__info\":\"project-general_project__info__2Qh6U\",\"project__description\":\"project-general_project__description__92Iu8\",\"modal\":\"project-general_modal__xj-aJ\",\"modal__window\":\"project-general_modal__window__2dUx-\",\"window__button\":\"project-general_window__button__BkcYn\",\"window__title\":\"project-general_window__title__3aStG\",\"active\":\"project-general_active__3eBHX\"};"],"sourceRoot":""}